{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Simulation","result":{"pageContext":{"currentCategory":"Simulation","categories":["All","OS","Memory","Paging","TIL","Spring-Security","Spring-Boot","Jwt","Login","Algorithm","DP","2D-Array-DP","Segment-Tree","Divide&Conquer","Blog","Java","BitMasking","BFS","DFS","Implementation","Geometry","Disjoin-Set","Union-Find","Set","Kruskal","Line-Sweeping","Greedy","Bitwise-Operation","Palindrome","Network","TCP","CIA","RSA","JWT","OSI-7계층","UDP","Session","Brute-Force","Combination","Data-Structure","Two-Pointer","Simulation","Math"],"edges":[{"node":{"id":"de485fb0-2363-51cd-ae0f-78a04795dc38","excerpt":"BOJ 23291 - 어항정리 Platinum Ⅴ  BOJ 23291 - 어항정리  💥 Rule  1. 물고기 추가 - add_fish() 가장 적은 수의 물고기가 담긴 모든 어항에 물고기 한 마리씩 추가한다.\n 배열을 순회하면서 min 값을 갖는 인덱스를 모두 저장해둔다.\n 해당 인덱스에 해당하는 어항에 물고기 한 마리씩 추가한다.  ✨ Python Code  2. 어항 쌓기 - stack_bowl() 세로 배열과 가로 배열로 구분해서 관리할 것이다.\n 모든 세로 배열의 끝에서부터의 원소들과 가로 배열의 첫 번째부터의 원소들이 짝을 이뤄 새로운 하나의 세로 배열을 생성하게 된다.\n 세로 배열 하나의 길이가 가로 배열의 길이보다 커질때까지 어항을 쌓을 수 있다. \n이해를 위해 그림을 추가한다.  ✨ Python Code  3. 물고기 조정하기 - balance() 각 어항들의 인접한 어항들간의 차이를 줄이는 과정이다. 인접한 어항들간의 차이를 diff 라 하고, diff를 5로 나…","fields":{"slug":"/boj-23291-어항정리/"},"frontmatter":{"categories":"Algorithm Implementation Simulation","title":"BOJ 23291 - 어항정리 [Implementation, Simulation]","date":"April 15, 2022"}},"next":{"fields":{"slug":"/boj-9320-금고열기/"}},"previous":{"fields":{"slug":"/boj-17947-상남자곽철용/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}