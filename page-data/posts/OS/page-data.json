{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/OS","result":{"pageContext":{"currentCategory":"OS","categories":["All","OS","Memory","Paging","TIL","Spring-Security","Spring-Boot","Jwt","Login","Algorithm","DP","2D-Array-DP","Segment-Tree","Divide&Conquer","Blog","Java","BitMasking","BFS","DFS","Implementation","Geometry","Disjoin-Set","Union-Find","Set","Kruskal","Line-Sweeping","Greedy","Bitwise-Operation","Palindrome","Network","TCP","CIA","RSA","JWT","OSI-7계층","UDP","Session","Brute-Force","Combination","Data-Structure","Two-Pointer","Simulation","Math"],"edges":[{"node":{"id":"45871712-2bf3-5269-a0c3-1e508fcc95d7","excerpt":"👩‍💻 OS - Memory Management (2) [Paging] 3️⃣ NonContiguous Memory Allocation - Paging, Segment 앞서 봤던 Contiguous Allocation은 외부 단편화 문제를 해결하기 위한 방법으로 NonContiguous Memory Allocation 방법들이 있습니다. 그 중 Paging과 Segment를 알아보겠습니다. Paging Paging 은 NonContiguous Allocation 방식이다. 고정된 크기로 메모리는 Frame, 프로세스는 Page로 분할하여 관리한다. 한 프로새스는 여러 Page로 나뉘고 main memory에서 필요한 page를 순서 관계없이 Frame에 mapping해준다.  Paging 장점 & 단점 장점 Physical memory를 frame 단위로 분할해 사용하기 때문에 External Fragment 발생할 일이 없다. 할당/해제 가 빠르다 Shared Page를 통해 자원을 쉽…","fields":{"slug":"/os-paging-1/"},"frontmatter":{"categories":"OS Memory Paging TIL","title":"OS - Memory Management (2) [Paging]","date":"January 01, 2023"}},"next":{"fields":{"slug":"/os-memory-management/"}},"previous":null},{"node":{"id":"05b7756f-ea82-5723-909d-d2e30b48b576","excerpt":"👩‍💻 OS - Memory Management (1) Preview  1️⃣ Background - Memory Mapping & Protection, MMU, Virtual Memory, Swapping\n 2️⃣ Contiguous Memory Allocation - Block 3️⃣ NonContiguous Memory Allocation - Paging, Segment  1️⃣ Background 🛡️Memory Mapping & Protection logical 주소를 physical 주소로 mapping 하고 Out Of Memory 관리 [ 메모리 접근 범위 관리 ] ®️ Base Register & Limit Register Base Register : Physical Address(RAM)의 시작 주소\n(Relocation Register) Limit Register : 현 프로그램이 사용할 수 있는 register의 마지막 주소 위 두 Register를 통해 Logical Addess…","fields":{"slug":"/os-memory-management/"},"frontmatter":{"categories":"OS Memory Paging TIL","title":"OS - Memory Management (1)","date":"December 31, 2022"}},"next":{"fields":{"slug":"/securityjwtlogin-6/"}},"previous":{"fields":{"slug":"/os-paging-1/"}}},{"node":{"id":"7882d6b1-642f-541b-aca0-83a6d053680c","excerpt":"Open Systems Interconnection 7 Layer  OSI 7계층이란? 네트워크에서 통신이 일어나는 과정을 7단계로 나눈 개방형 시스템 상호 연결 모델의 표준이다.  OSI 7계층 분리 이유 모든 시스템들의 상호 연결에 있어 문제 없도록 표준을 정함. 계층을 나눠 통신이 일어나는 과정을 단계별로 확인할 수 있음. 장점 : 7계층 중 특정 Layer에 이상이 생기면 다른 장비 및 SW는 유지하고 해당 Layer 장비만 교체하면 된다.  OSI 7계층 구조    응용 프로그램에서 다른 응용 프로그램으로의 통신을 위해 빨간색 화살표를 따라 통신이 이루어진다. 송신자의 관점으로 설명을 진행한다.  💥 7계층 : Application Layer - 응용 계층 응용 프로세서 간의 정보 교환을 담당한다. \n여기에서 중요한 점은 응용 계층은 응용 프로그램이 아니다. HTTP와 같은 프로토콜이 여기에 해당한다. \n⚒ 대표적으로 HTTP (HyperText Transfer Proto…","fields":{"slug":"/osi7Layer/"},"frontmatter":{"categories":"Network OSI-7계층 TIL","title":"OSI 7계층 - 통신 Open Systems Interconnection 7 Layer","date":"May 12, 2022"}},"next":{"fields":{"slug":"/tcp-udp/"}},"previous":{"fields":{"slug":"/jwt-structure/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}