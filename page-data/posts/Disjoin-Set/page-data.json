{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Disjoin-Set","result":{"pageContext":{"currentCategory":"Disjoin-Set","categories":["All","OS","Memory","Paging","TIL","Spring-Security","Spring-Boot","Jwt","Login","Algorithm","DP","2D-Array-DP","Segment-Tree","Divide&Conquer","Blog","Java","BitMasking","BFS","DFS","Implementation","Geometry","Disjoin-Set","Union-Find","Set","Kruskal","Line-Sweeping","Greedy","Bitwise-Operation","Palindrome","Network","TCP","CIA","RSA","JWT","OSI-7계층","UDP","Session","Brute-Force","Combination","Data-Structure","Two-Pointer","Simulation","Math"],"edges":[{"node":{"id":"0e484e3f-6dc5-58e6-bc04-359a7c911fd9","excerpt":"SWEA 4111 - 무선 단속 카메라 D-Ⅳ  이 문제는 SWEA 문제입니다. 문제 출처 : 무선 단속 카메라\n 🔥 Point  이 문제의 핵심은 Kruskal 알고리즘에서 아이디어를 떠올렸다. \nKruskal 알고리즘은 MST(Minimum Spanning Tree)를 만들기 위한 알고리즘 중 하나이다. \nMST란 최소 비용으로 만들 수 있는 Spanning Tree(신장 트리)를 찾는 알고리즘이다.  🌟 MST 찾기 위해서 Kruskal 알고리즘은 모든 간선 중 가장 비용이 낮은 간선들부터 제거하며 해당 간선으로 이어져 있는 노드들끼리 합쳐주는 것 이다. 이를 이 문제에 적용해 해결할 것이다.  💥 How to Solve?  수신기는 모든 카메라들을 포함하고 있어야 한다. 이를 반대로 생각해봤다. 모든 카메라에 하나의 수신기들이 배당되어 있고, 가장 붙어있는 카메라들을 하나의 수신기가 담당하도록 한다. 이해를 위해 그림으로 살펴보자.\n 1️⃣ 최초에는 모든 카메라에 수신기를 부여…","fields":{"slug":"/swea-4111-무선단속카메라/"},"frontmatter":{"categories":"Algorithm Disjoin-Set Union-Find Set Kruskal","title":"SWEA 4111 - 무선 단속 카메라 [SWEA 문제 - Disjoint-Set, Union-Find]","date":"May 20, 2022"}},"next":{"fields":{"slug":"/swea-4408-자기방으로돌아가기/"}},"previous":{"fields":{"slug":"/swea-14362-무한로봇/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}