{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/UDP","result":{"pageContext":{"currentCategory":"UDP","categories":["All","OS","Memory","Paging","TIL","Spring-Security","Spring-Boot","Jwt","Login","Algorithm","DP","2D-Array-DP","Segment-Tree","Divide&Conquer","Blog","Java","BitMasking","BFS","DFS","Implementation","Geometry","Disjoin-Set","Union-Find","Set","Kruskal","Line-Sweeping","Greedy","Bitwise-Operation","Palindrome","Network","TCP","CIA","RSA","JWT","OSI-7계층","UDP","Session","Brute-Force","Combination","Data-Structure","Two-Pointer","Simulation","Math"],"edges":[{"node":{"id":"acbef66e-b5ed-5058-8f8c-608e15079263","excerpt":"TCP VS UDP  💥 TCP - Transmission Control Protocol 우선 간단한 그림을 통해 TCP의 데이터 송신 과정을 살펴보자.\n   ✔ ACK(확인 신호)를 응답받아야 다음 메세지를 전송하고 응답을 받지 못하면 재전송을 한다. 이러한 특징때문에 신뢰성 이 높지만 속도가 비교적 느리다. TCP 특징 1️⃣ : 연결형 서비스 3-Way Handshaking 과정을 통해 연결한다. 4-Way Handshaking 과정을 통해 연결을 해제한다. 3-Way Handshaking   1️⃣ : Client가 서버에 접속을 요청하는 SYN 패킷을 전송한다. \n2️⃣ : 서버는 Client에게 SYN 요청을 받고 Client에게 요청을 수락하는 ACK 와 SYN flag가 설정된 패킷을 전송한다. Client가 다시 ACK을 응답하기를 기다린다. \n3️⃣ : Client는 서버에게 ACK 응답을 전송하고 연결이 서로 이루어진다. 이후 데이터가 오고 간다.\n 4-Way Handshak…","fields":{"slug":"/tcp-udp/"},"frontmatter":{"categories":"Network TCP UDP TIL","title":"TCP/UDP 통신 [통신 - TCP/UDP]","date":"May 12, 2022"}},"next":{"fields":{"slug":"/session-login/"}},"previous":{"fields":{"slug":"/osi7Layer/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}