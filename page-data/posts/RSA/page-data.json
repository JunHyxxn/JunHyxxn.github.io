{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/RSA","result":{"pageContext":{"currentCategory":"RSA","categories":["All","OS","Memory","Paging","TIL","Spring-Security","Spring-Boot","Jwt","Login","Algorithm","DP","2D-Array-DP","Segment-Tree","Divide&Conquer","Blog","Java","BitMasking","BFS","DFS","Implementation","Geometry","Disjoin-Set","Union-Find","Set","Kruskal","Line-Sweeping","Greedy","Bitwise-Operation","Palindrome","Network","TCP","CIA","RSA","JWT","OSI-7계층","UDP","Session","Brute-Force","Combination","Data-Structure","Two-Pointer","Simulation","Math"],"edges":[{"node":{"id":"b6b1f7a0-2111-504c-9a0b-24ef832f39a5","excerpt":"보안의 3요소 CIA와 RSA  해당 내용은 메타코딩 - 스프링부트 시큐리티 강의를 들으며 정리한 내용입니다. TCP 통신이 갖고 있는 보안상의 문제점에 대해 살펴보고 RSA 인증 방법을 살펴본다. Web은 TCP 프로토콜을 이용하기 때문에 어떠한 보안상의 문제가 있고, 이를 해결하기 위해 어떤 방식을 사용할 수 있는지는 중요한 내용이다.  보안의 3요소 - CIA 💥 Confidentiality - 기밀성  \nC를 해커라 했을 때, 해커가 중간에 데이터를 가로챌 수 있다. - 기밀성이 깨진다. 💥 Integrity & Available - 무결성 & 가용성  \nC가 가로채 위조 데이터를 전송하게 되면 데이터의 무결성이 꺠지고, B는 제대로 된 데이터를 받지 못해 가용성이 깨진다.  1️⃣ : Key를 뺏기면 기밀성 위배 2️⃣ : Key를 뺏기면 무결성 위배 3️⃣ : 수신자가 Key가 없다면 가용성 위배 ⚒ Key를 수신자가 가지고 있어야 하기 때문에, 열쇠 전달의 문제도 발생한다. 🔥 …","fields":{"slug":"/cia-rsa/"},"frontmatter":{"categories":"Network TCP CIA RSA TIL","title":"TCP 통신의 보안 - TCP, CIA, RSA","date":"May 12, 2022"}},"next":{"fields":{"slug":"/jwt-structure/"}},"previous":{"fields":{"slug":"/swea-4699-콩순이의 가장 싼 팰린드롬/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}